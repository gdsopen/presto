/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/pnr/passenger": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get a passenger record
     * @description 乗客レコードを取得します
     */
    get: operations["getPassenger"];
    /**
     * Update an existing passenger record
     * @description 既存の乗客レコードを更新します
     */
    put: operations["updatePassenger"];
    /**
     * Create a new passenger record
     * @description 新しい乗客レコードを作成します
     */
    post: operations["createPassenger"];
    /**
     * Delete a passenger record
     * @description 乗客レコードを削除します
     */
    delete: operations["deletePassenger"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/pnr/passenger/search": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Search for a passenger record
     * @description 乗客レコードを検索します
     */
    post: operations["searchPassenger"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/pnr/flight": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get a flight record
     * @description フライトレコードを取得します
     */
    get: operations["getFlight"];
    /**
     * Update an existing flight record
     * @description 既存のフライトレコードを更新します
     */
    put: operations["updateFlight"];
    /**
     * Create a new flight record
     * @description 新しいフライトレコードを作成します
     */
    post: operations["createFlight"];
    /**
     * Delete a flight record
     * @description フライトレコードを削除します
     */
    delete: operations["deleteFlight"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/accounts/new": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Create a new account
     * @description 新しいアカウントを作成します
     */
    post: operations["createAccount"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/accounts/login": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Login to an account
     * @description アカウントにログインします
     */
    post: operations["login"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/accounts/info": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Login to an account
     * @description アカウントにログインします
     */
    get: operations["userinfo"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/pass": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Generate a pass for a passenger
     * @description 乗客のパスを生成します
     */
    post: operations["generatePass"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/pass/passenger": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Search for a passenger PNR by name
     * @description 乗客のPNRを名前ベースで検索
     */
    post: operations["generatePassengerPass"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    PassengerNameRecord: {
      id?: string;
      pnrId?: string;
      firstName?: string;
      lastName?: string;
      middleName?: string;
      nameTitle?: string;
      passengerDescription?: number;
      checkInSource?: string;
      boardingPassIssuanceSource?: string;
      issuanceDate?: string;
      documentType?: string;
      boardingPassIssuerDesignator?: string;
      baggageTagNumber?: string;
      firstBaggageTagNumber?: string;
      secondBaggageTagNumber?: string;
      securityDataType?: string;
      securityData?: string;
    };
    PassengerFlightRecord: {
      id?: string;
      pnrId?: string;
      departurePort?: string;
      arrivalPort?: string;
      operatingCarrier?: string;
      flightNumber?: number;
      departureDate?: string;
      compartmentCode?: string;
      seatNumber?: string;
      checkInSequenceNumber?: number;
      remarks?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  getPassenger: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": {
          id?: string;
        };
      };
    };
    responses: {
      /** @description Passenger found successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PassengerNameRecord"];
        };
      };
      /** @description Failed to find passenger */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  updatePassenger: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PassengerNameRecord"];
      };
    };
    responses: {
      /** @description Passenger updated successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            pnrId?: string;
            firstName?: string;
            lastName?: string;
            middleName?: string;
            nameTitle?: string;
            passengerDescription?: number;
            checkInSource?: string;
            boardingPassIssuanceSource?: string;
            issuanceDate?: string;
            documentType?: string;
            boardingPassIssuerDesignator?: string;
            baggageTagNumber?: string;
            firstBaggageTagNumber?: string;
            secondBaggageTagNumber?: string;
            securityDataType?: string;
            securityData?: string;
            passengerUserId?: string;
            email?: string;
          };
        };
      };
      /** @description Failed to update passenger */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  createPassenger: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PassengerNameRecord"];
      };
    };
    responses: {
      /** @description Passenger created successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PassengerNameRecord"];
        };
      };
      /** @description Failed to create passenger */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  deletePassenger: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": {
          id?: string;
        };
      };
    };
    responses: {
      /** @description Passenger deleted successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PassengerNameRecord"];
        };
      };
      /** @description Failed to delete passenger */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  searchPassenger: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": {
          firstName?: string;
          lastName?: string;
        };
      };
    };
    responses: {
      /** @description Passenger found successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PassengerNameRecord"];
        };
      };
      /** @description Failed to find passenger */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getFlight: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Flight found successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PassengerFlightRecord"][];
        };
      };
      /** @description Failed to find flight record */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  updateFlight: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PassengerFlightRecord"];
      };
    };
    responses: {
      /** @description Flight updated successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PassengerFlightRecord"];
        };
      };
      /** @description Failed to update flight record */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  createFlight: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PassengerFlightRecord"];
      };
    };
    responses: {
      /** @description Flight created successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PassengerFlightRecord"];
        };
      };
      /** @description Failed to create flight record */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  deleteFlight: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": {
          id?: string;
        };
      };
    };
    responses: {
      /** @description Flight deleted successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PassengerFlightRecord"];
        };
      };
      /** @description Failed to delete flight record */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  createAccount: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": {
          login?: string;
          password?: string;
        };
      };
    };
    responses: {
      /** @description Account created successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Failed to create user */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  login: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": {
          login?: string;
          password?: string;
        };
      };
    };
    responses: {
      /** @description Login successful */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            token?: string;
          };
        };
      };
      /** @description Invalid Login Credentials */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  userinfo: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Login successful */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            login?: string;
          };
        };
      };
      /** @description Invalid Login Credentials */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  generatePass: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": {
          id?: string;
        };
      };
    };
    responses: {
      /** @description Pass generated successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PassengerFlightRecord"];
        };
      };
      /** @description Failed to create passenger */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  generatePassengerPass: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": {
          firstName: string;
          lastName?: string;
          middleName?: string;
        };
      };
    };
    responses: {
      /** @description Passenger found successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PassengerFlightRecord"][];
        };
      };
      /** @description Failed to find passenger */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
}
