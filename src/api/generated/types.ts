/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/accounts/login": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Login"];
        };
      };
      responses: {
        /** @description ログイン成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["LoginResponse"];
          };
        };
        /** @description 認証失敗 */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/accounts/info": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description ユーザー情報取得成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["User"];
          };
        };
        /** @description ユーザーが見つかりません */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/pnr/passenger": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Id"];
        };
      };
      responses: {
        /** @description 乗客情報取得成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["PassengerNameRecord"];
          };
        };
        /** @description 乗客情報取得失敗 */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["PassengerNameRecordUpdate"];
        };
      };
      responses: {
        /** @description 乗客情報更新成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["NameResponse"];
          };
        };
        /** @description 乗客情報更新失敗 */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["PassengerNameRecord"];
        };
      };
      responses: {
        /** @description 乗客情報作成成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["NameResponse"];
          };
        };
        /** @description PNRが既に存在します */
        409: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 乗客情報作成失敗 */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Id"];
        };
      };
      responses: {
        /** @description 乗客情報削除成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["NameResponse"];
          };
        };
        /** @description 乗客情報削除失敗 */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/pnr/passenger/search": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Search"];
        };
      };
      responses: {
        /** @description 乗客検索成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["PassengerNameRecord"];
          };
        };
        /** @description 乗客検索失敗 */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/pnr/flight": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["PassengerFlightRecordUpdate"];
        };
      };
      responses: {
        /** @description フライト情報更新成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["PassengerFlightRecord"];
          };
        };
        /** @description フライト情報更新失敗 */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["PassengerFlightRecord"];
        };
      };
      responses: {
        /** @description フライト情報作成成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["PassengerNameRecord"];
          };
        };
        /** @description フライト情報作成失敗 */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Id"];
        };
      };
      responses: {
        /** @description フライト情報削除成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["PassengerFlightRecord"];
          };
        };
        /** @description フライト情報削除失敗 */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/pass/passenger": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            firstName: string;
            lastName?: string;
            middleName?: string;
          };
        };
      };
      responses: {
        /** @description 搭乗券情報取得成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              pnrId: string;
              flightNumber: string;
              departureDate: string;
              departureTime: string;
              arrivalDate: string;
              arrivalTime: string;
              departureAirport: string;
              arrivalAirport: string;
              seatNumber: string;
              status: string;
            }[];
          };
        };
        /** @description 搭乗券情報取得失敗 */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/pass": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            id: string;
          };
        };
      };
      responses: {
        /** @description 搭乗券情報取得成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              pnrId: string;
              flightNumber: string;
              departureDate: string;
              departureTime: string;
              arrivalDate: string;
              arrivalTime: string;
              departureAirport: string;
              arrivalAirport: string;
              seatNumber: string;
              status: string;
            }[];
          };
        };
        /** @description 搭乗券情報取得失敗 */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/admin/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateUser"];
        };
      };
      responses: {
        /** @description ユーザー情報更新成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["User"];
          };
        };
        /** @description ユーザーが見つかりません */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/admin/update/substitute": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateOtherUser"];
        };
      };
      responses: {
        /** @description ユーザー情報更新成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["User"];
          };
        };
        /** @description ユーザーが見つかりません */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/admin/users": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description ユーザー一覧取得成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["User"][];
          };
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 権限エラー */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/admin/signup": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateUserFromAdmin"];
        };
      };
      responses: {
        /** @description ユーザー登録成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["User"];
          };
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 権限エラー */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/pnrgov/full/{pnrId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          pnrId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description EDIFACT message */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": string;
          };
        };
        /** @description PNR not found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/pnrgov/update/{pnrId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          pnrId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description EDIFACT message */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": string;
          };
        };
        /** @description PNR not found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/pnrgov/adhoc/{pnrId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          pnrId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description EDIFACT message */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": string;
          };
        };
        /** @description PNR not found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    LoginResponse: {
      token: string;
    };
    Login: {
      login: string;
      password: string;
    };
    User: {
      id: string;
      login: string;
      name: string;
      role: string;
      terminal?: string;
    };
    NameResponse: {
      name: string;
    };
    PassengerNameRecord: {
      pnrId: string;
      firstName: string;
      lastName: string;
      middleName?: string;
      nameTitle: string;
      passengerDescription: number;
      checkInSource?: string;
      boardingPassIssuanceSource?: string;
      issuanceDate?: string;
      documentType: string;
      boardingPassIssuerDesignator?: string;
      baggageTagNumber?: string;
      firstBaggageTagNumber?: string;
      secondBaggageTagNumber?: string;
      securityDataType?: string;
      securityData?: string;
      passengerUserId?: string;
    };
    PassengerNameRecordUpdate: components["schemas"]["PassengerNameRecord"] & {
      id: string;
    };
    Id: {
      id: string;
    };
    Search: {
      firstName: string;
      lastName?: string;
    };
    PassengerFlightRecord: {
      pnrId: string;
      departurePort: string;
      arrivalPort: string;
      operatingCarrier: string;
      flightNumber: number;
      departureDate: string;
      compartmentCode: string;
      seatNumber?: string;
      checkInSequenceNumber?: number;
      passengerUserId?: string;
    };
    PassengerFlightRecordUpdate: components["schemas"]["PassengerFlightRecord"] & {
      id: string;
    };
    UpdateUser: {
      currentPassword: string;
      newPassword?: string;
      name?: string;
      role?: string;
    };
    UpdateOtherUser: {
      currentPassword: string;
      login: string;
      newPassword?: string;
      name?: string;
      role?: string;
    };
    CreateUserFromAdmin: {
      login: string;
      password: string;
      name: string;
      role: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
